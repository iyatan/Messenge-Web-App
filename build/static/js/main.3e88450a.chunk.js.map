{"version":3,"sources":["serviceWorker.js","Login/styles.js","Login/login.js","Signup/styles.js","Signup/signup.js","NewChat/styles.js","NewChat/newChat.js","ChatList/styles.js","ChatList/chatList.js","ChatView/styles.js","ChatView/chatView.js","ChatTextBox/styles.js","ChatTextBox/chatTextBox.js","Dashboard/styles.js","Dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","userTyping","whichInput","event","setState","email","target","value","password","submitLogin","e","a","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","serverError","console","log","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","onChange","id","type","Button","to","React","Component","withStyles","SignupComponent","passwordConfirmation","formIsValid","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","friends","messages","firestore","collection","doc","set","dbErr","signupError","authErr","hasAccountHeader","logInLink","position","top","left","input","NewChatComponent","inputType","username","message","submitNewChat","userExists","chatExists","goToChat","createChat","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","docKey","get","chat","exists","usersSnapshot","docs","map","_doc","data","includes","root","backgroundColor","palette","background","height","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","ChatListComponent","userIsSender","length","sender","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","chats","onClick","List","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","split","ListItemText","primary","secondary","Fragment","substring","receiverHasRead","ListItemIcon","Divider","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidMount","container","document","getElementById","scrollTo","scrollHeight","componentDidUpdate","undefined","_usr","_msg","sendBtn","chatTextBoxContainer","bottom","chatTextBox","ChatTextBoxComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","userClickedInput","userClickedInputFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","signOutBtn","DashboardComponent","signOut","msg","selectedChat","update","FieldValue","arrayUnion","timestamp","Date","now","friend","newChatBtnClicked","newChatFormVisible","newChatSubmit","chatObj","chatIndex","messageRead","usersInChat","find","every","indexOf","clickedMessageWhereNotSender","componentWillMount","onAuthStateChanged","where","onSnapshot","res","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","routing","exact","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6FCuBSC,EAzCA,SAAAC,GAAK,MAAK,CACrBC,KAAK,aACDC,MAAO,OACPC,QAAS,QACTC,WAAiC,EAArBJ,EAAMK,QAAQC,KAC1BC,YAAkC,EAArBP,EAAMK,QAAQC,MAC1BN,EAAMQ,YAAYC,GAAG,IAA2B,EAArBT,EAAMK,QAAQC,KAAW,GAAK,CACtDJ,MAAO,IACPE,WAAY,OACZG,YAAa,SAGrBG,MAAO,CACHC,UAAgC,EAArBX,EAAMK,QAAQC,KACzBH,QAAS,OACTS,cAAe,SACfC,WAAY,SACZC,QAAQ,GAAD,OAA0B,EAArBd,EAAMK,QAAQC,KAAnB,cAAsD,EAArBN,EAAMK,QAAQC,KAA/C,cAAkF,EAArBN,EAAMK,QAAQC,KAA3E,OAEXS,KAAM,CACFb,MAAO,OACPS,UAAWX,EAAMK,QAAQC,MAE7BU,OAAQ,CACJL,UAAgC,EAArBX,EAAMK,QAAQC,MAE7BW,gBAAiB,CACbf,MAAO,QAEXgB,WAAY,CACRhB,MAAO,OACPiB,eAAgB,OAChBC,MAAO,UACPC,WAAY,UAEhBC,UAAW,CACPF,MAAO,MACPG,UAAW,Y,+ECzBbC,EAAWC,EAAQ,IAEnBC,E,YAEF,aAAe,IAAD,8BACV,+CA0CJC,WAAa,SAACC,EAAYC,GACtB,OAAQD,GACJ,IAAK,QACD,EAAKE,SAAS,CAAEC,MAAOF,EAAMG,OAAOC,QACpC,MACJ,IAAK,WACD,EAAKH,SAAS,CAAEI,SAAUL,EAAMG,OAAOC,UAjDrC,EAuDdE,YAvDc,sCAuDA,WAAOC,GAAP,SAAAC,EAAA,4DACVD,EAAEE,iBADQ,SAEJd,EACDe,OACAC,2BAA2B,EAAKC,MAAMV,MAAO,EAAKU,MAAMP,UACxDQ,KAAK,WACF,EAAKC,MAAMC,QAAQC,KAAK,eACzB,SAAAC,GACC,EAAKhB,SAAS,CAAEiB,aAAa,IAC7BC,QAAQC,IAAI,qBAAsBH,KAThC,yCAvDA,sDAEV,EAAKL,MAAQ,CACTV,MAAO,KACPG,SAAU,KACVa,aAAa,GALP,E,sEASJ,IAAD,OAEGG,EAAYC,KAAKR,MAAjBO,QAER,OACI,0BAAME,UAAWF,EAAQjD,MACrB,kBAACoD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAOF,UAAWF,EAAQxC,OACtB,kBAAC6C,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,WAGA,0BAAMC,SAAU,SAACtB,GAAD,OAAO,EAAKD,YAAYC,IAAIgB,UAAWF,EAAQnC,MAC3D,kBAAC4C,EAAA,EAAD,CAAaC,UAAQ,EAACC,WAAS,EAACC,OAAO,UACnC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,qBAApB,oBACA,kBAACC,EAAA,EAAD,CAAOC,aAAa,QAAQC,WAAS,EAACC,SAAU,SAAChC,GAAD,OAAO,EAAKT,WAAW,QAASS,IAAIiC,GAAG,uBAE3F,kBAACV,EAAA,EAAD,CAAaC,UAAQ,EAACC,WAAS,EAACC,OAAO,UACnC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,wBAApB,uBACA,kBAACC,EAAA,EAAD,CAAOC,aAAa,mBAAmBI,KAAK,WAAWF,SAAU,SAAChC,GAAD,OAAO,EAAKT,WAAW,WAAYS,IAAIiC,GAAG,0BAE/G,kBAACE,EAAA,EAAD,CAAQD,KAAK,SAAST,WAAS,EAACJ,QAAQ,YAAYrC,MAAM,UAAUgC,UAAWF,EAAQlC,QAAvF,WAEHmC,KAAKV,MAAMM,YACR,kBAACQ,EAAA,EAAD,CAAYH,UAAWF,EAAQ5B,UAAWkC,UAAU,KAAKC,QAAQ,MAAjE,+BAGA,KAEJ,wBAAIL,UAAWF,EAAQjC,iBAAvB,0BACA,kBAAC,IAAD,CAAMmC,UAAWF,EAAQhC,WAAYsD,GAAG,WAAxC,kB,GAxCSC,IAAMC,WAsEpBC,MAAW5E,EAAX4E,CAAmBjD,GC3CnB3B,EAzCA,SAAAC,GAAK,MAAK,CACrBC,KAAK,aACDC,MAAO,OACPC,QAAS,QACTC,WAAiC,EAArBJ,EAAMK,QAAQC,KAC1BC,YAAkC,EAArBP,EAAMK,QAAQC,MAC1BN,EAAMQ,YAAYC,GAAG,IAA2B,EAArBT,EAAMK,QAAQC,KAAW,GAAK,CACtDJ,MAAO,IACPE,WAAY,OACZG,YAAa,SAGrBG,MAAO,CACHC,UAAgC,EAArBX,EAAMK,QAAQC,KACzBH,QAAS,OACTS,cAAe,SACfC,WAAY,SACZC,QAAQ,GAAD,OAA0B,EAArBd,EAAMK,QAAQC,KAAnB,cAAsD,EAArBN,EAAMK,QAAQC,KAA/C,cAAkF,EAArBN,EAAMK,QAAQC,KAA3E,OAEXS,KAAM,CACFb,MAAO,OACPS,UAAWX,EAAMK,QAAQC,MAE7BU,OAAQ,CACJL,UAAgC,EAArBX,EAAMK,QAAQC,MAE7BW,gBAAiB,CACbf,MAAO,QAEXgB,WAAY,CACRhB,MAAO,OACPiB,eAAgB,OAChBC,MAAO,UACPC,WAAY,UAEhBC,UAAW,CACPF,MAAO,MACPG,UAAW,YCzBbC,EAAWC,EAAQ,IAEnBmD,E,YAEF,aAAe,IAAD,8BACV,+CAiDJjD,WAAa,SAACC,EAAYC,GACtB,OAAQD,GACJ,IAAK,QACD,EAAKE,SAAS,CAAEC,MAAOF,EAAMG,OAAOC,QACpC,MAEJ,IAAK,WACD,EAAKH,SAAS,CAAEI,SAAUL,EAAMG,OAAOC,QACvC,MAEJ,IAAK,uBACD,EAAKH,SAAS,CAAE+C,qBAAsBhD,EAAMG,OAAOC,UA7DjD,EAqEd6C,YAAc,kBAAM,EAAKrC,MAAMP,WAAa,EAAKO,MAAMoC,sBArEzC,EAuEdE,aAAe,SAAC3C,GACZA,EAAEE,iBAEG,EAAKwC,cAKVtD,EACKe,OACAyC,+BAA+B,EAAKvC,MAAMV,MAAO,EAAKU,MAAMP,UAC5DQ,KAAK,SAAAuC,GACF,IAAMC,EAAU,CACZnD,MAAOkD,EAAQE,KAAKpD,MACpBqD,QAAS,GACTC,SAAU,IAEd7D,EACK8D,YACAC,WAAW,SACXC,IAAI,EAAK/C,MAAMV,OACf0D,IAAIP,GACJxC,KAAK,WACF,EAAKC,MAAMC,QAAQC,KAAK,eACzB,SAAA6C,GACC1C,QAAQC,IAAI,uCAAwCyC,GACpD,EAAK5D,SAAS,CAAE6D,YAAa,yBAEtC,SAAAC,GACC5C,QAAQC,IAAI,0BAA2B2C,GACvC,EAAK9D,SAAS,CAAE6D,YAAa,yBA1BjC,EAAK7D,SAAS,CAAE6D,YAAa,4BAzEjC,EAAKlD,MAAQ,CACTV,MAAO,KACPG,SAAU,KACV2C,qBAAsB,KACtBc,YAAa,IANP,E,sEAUJ,IAAD,OAEGzC,EAAYC,KAAKR,MAAjBO,QAER,OACI,0BAAME,UAAWF,EAAQjD,MACrB,kBAACoD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAOF,UAAWF,EAAQxC,OACtB,kBAAC6C,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,YAGA,0BAAMC,SAAU,SAACtB,GAAD,OAAO,EAAK2C,aAAa3C,IAAIgB,UAAWF,EAAQnC,MAC5D,kBAAC4C,EAAA,EAAD,CAAaC,UAAQ,EAACC,WAAS,EAACC,OAAO,UACnC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,sBAApB,oBACA,kBAACC,EAAA,EAAD,CAAOC,aAAa,QAAQC,WAAS,EAACC,SAAU,SAAChC,GAAD,OAAO,EAAKT,WAAW,QAASS,IAAIiC,GAAG,wBAE3F,kBAACV,EAAA,EAAD,CAAaC,UAAQ,EAACC,WAAS,EAACC,OAAO,UACnC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,yBAApB,qBACA,kBAACC,EAAA,EAAD,CAAOK,KAAK,WAAWF,SAAU,SAAChC,GAAD,OAAO,EAAKT,WAAW,WAAYS,IAAIiC,GAAG,2BAE/E,kBAACV,EAAA,EAAD,CAAaC,UAAQ,EAACC,WAAS,EAACC,OAAO,UACnC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,sCAApB,yBACA,kBAACC,EAAA,EAAD,CAAOK,KAAK,WAAWF,SAAU,SAAChC,GAAD,OAAO,EAAKT,WAAW,uBAAwBS,IAAIiC,GAAG,wCAE3F,kBAACE,EAAA,EAAD,CAAQD,KAAK,SAAST,WAAS,EAACJ,QAAQ,YAAYrC,MAAM,UAAUgC,UAAWF,EAAQlC,QAAvF,WAGAmC,KAAKV,MAAMkD,YACP,kBAACpC,EAAA,EAAD,CAAYH,UAAWF,EAAQ5B,UAAWkC,UAAU,KAAKC,QAAQ,MAC5DN,KAAKV,MAAMkD,aAEhB,KAER,wBAAIvC,UAAWF,EAAQ2C,kBAAvB,4BACA,kBAAC,IAAD,CAAMzC,UAAWF,EAAQ4C,UAAWtB,GAAG,UAAvC,iB,GA9CUC,IAAMC,WA4GrBC,MAAW5E,EAAX4E,CAAmBC,G,OCxFnB7E,EAlCA,SAAAC,GAAK,MAAK,CACrBC,KAAK,aACDC,MAAO,OACPC,QAAS,QACTC,WAAiC,EAArBJ,EAAMK,QAAQC,KAC1BC,YAAkC,EAArBP,EAAMK,QAAQC,MAC1BN,EAAMQ,YAAYC,GAAG,IAA2B,EAArBT,EAAMK,QAAQC,KAAW,GAAK,CACtDJ,MAAO,IACPE,WAAY,OACZG,YAAa,SAGrBG,MAAO,CACHI,QAAQ,GAAD,OAA0B,EAArBd,EAAMK,QAAQC,KAAnB,cAAsD,EAArBN,EAAMK,QAAQC,KAA/C,cAAkF,EAArBN,EAAMK,QAAQC,KAA3E,MACPyF,SAAU,WACV7F,MAAO,QACP8F,IAAK,OACLC,KAAM,6BAEVC,MAAO,GAEPnF,KAAM,CACFb,MAAO,OACPS,UAAWX,EAAMK,QAAQC,MAE7BU,OAAQ,CACJL,UAAgC,EAArBX,EAAMK,QAAQC,MAE7BgB,UAAW,CACPF,MAAO,MACPG,UAAW,YC3BbC,EAAWC,EAAQ,IAEnB0E,E,YAEF,aAAe,IAAD,8BACV,+CAuDJxE,WAAa,SAACyE,EAAWhE,GACrB,OAAQgE,GACJ,IAAK,WACD,EAAKtE,SAAS,CAAEuE,SAAUjE,EAAEJ,OAAOC,QACnC,MAEJ,IAAK,UACD,EAAKH,SAAS,CAAEwE,QAASlE,EAAEJ,OAAOC,UA/DhC,EAqEdsE,cArEc,sCAqEE,WAAOnE,GAAP,SAAAC,EAAA,4DACZD,EAAEE,iBADU,SAEa,EAAKkE,aAFlB,kDAIiB,EAAKC,aAJtB,cAKK,EAAKC,WAAa,EAAKC,aAL5B,yCArEF,wDA6EdC,YAAc,iBAAM,CAACpF,EAASe,OAAOsE,YAAY9E,MAAO,EAAKU,MAAM4D,UAAUS,OAAOC,KAAK,MA7E3E,EA8EdJ,WAAa,WACT,EAAKhE,MAAMqE,gBAAgB,CACvBC,OAAQ,EAAKxE,MAAM4D,SACnBC,QAAS,EAAK7D,MAAM6D,WAjFd,EAoFdI,SAAW,kBAAM,EAAK/D,MAAMuE,WAAW,EAAKN,cAAe,EAAKnE,MAAM6D,UApFxD,EAqFdG,WArFc,qBAqFD,8BAAApE,EAAA,4DACH8E,EAAS,EAAKP,cADX,SAGLpF,EACK8D,YACAC,WAAW,SACXC,IAAI2B,GACJC,MAPA,cAEHC,EAFG,OAQTrE,QAAQC,IAAIoE,EAAKC,QARR,kBASFD,EAAKC,QATH,yCArFC,EAgGdd,WAhGc,qBAgGD,8BAAAnE,EAAA,qEAELb,EACK8D,YACAC,WAAW,SACX6B,MALA,cACHG,EADG,OAMHD,EAASC,EACVC,KACAC,IAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAO5F,QACxB6F,SAAS,EAAKnF,MAAM4D,UACzB,EAAKvE,SAAS,CAAEiB,aAAcuE,IAVrB,kBAWFA,GAXE,yCA9FT,EAAK7E,MAAQ,CACT4D,SAAU,KACVC,QAAS,MAJH,E,sEAQJ,IAAD,OAEGpD,EAAYC,KAAKR,MAAjBO,QAER,OACI,0BAAME,UAAWF,EAAQjD,MACrB,kBAACoD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAOF,UAAWF,EAAQxC,OACtB,kBAAC6C,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,mBACA,0BAAML,UAAWF,EAAQnC,KAAM2C,SAAU,SAACtB,GAAD,OAAO,EAAKmE,cAAcnE,KAC/D,kBAACuB,EAAA,EAAD,CAAaE,WAAS,GAClB,kBAACE,EAAA,EAAD,CAAYC,QAAQ,qBAApB,6BAGA,kBAACC,EAAA,EAAD,CAAOL,UAAQ,EACXR,UAAWF,EAAQgD,MACnB/B,WAAS,EACTC,SAAU,SAAChC,GAAD,OAAO,EAAKT,WAAW,WAAYS,IAC7CiC,GAAG,uBAGX,kBAACV,EAAA,EAAD,CAAaE,WAAS,GAClB,kBAACE,EAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,EAAA,EAAD,CAAOL,UAAQ,EACXR,UAAWF,EAAQgD,MACnB9B,SAAU,SAAChC,GAAD,OAAO,EAAKT,WAAW,UAAWS,IAC5CiC,GAAG,sBAGX,kBAACE,EAAA,EAAD,CAAQV,WAAS,EAACJ,QAAQ,YAAYrC,MAAM,UAAUgC,UAAWF,EAAQlC,OAAQsD,KAAK,UAAtF,SAGAnB,KAAKV,MAAMM,YACP,kBAACQ,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKL,UAAWF,EAAQ5B,WAA3D,6BAGA,S,2CAOfE,EAASe,OAAOsE,aACjB1D,KAAKR,MAAMC,QAAQC,KAAK,c,GAxDL4B,IAAMC,WAgHtBC,cAAW5E,EAAX4E,CAAmBwB,G,6CC9FnBpG,EAvBA,SAAAC,GAAK,MAAK,CACrB6H,KAAM,CACFC,gBAAiB9H,EAAM+H,QAAQC,WAAWtH,MAC1CuH,OAAQ,oBACRlC,SAAU,WACVE,KAAM,IACN/F,MAAO,QACPgI,UAAW,qBAEfC,SAAU,CACNC,OAAQ,WAEZC,WAAY,CACRC,aAAc,OAElBC,cAAe,CACXnH,MAAO,MACP2E,SAAU,WACVC,IAAK,IACLwC,MAAO,S,oCCLTC,E,2MAmEFC,aAAe,SAACrB,GAAD,OAAUA,EAAKhC,SAASgC,EAAKhC,SAASsD,OAAS,GAAGC,SAAW,EAAKjG,MAAMkG,W,EACvFC,QAAU,kBAAM,EAAKnG,MAAMoG,gB,EAC3BC,WAAa,SAACC,GAAD,OAAW,EAAKtG,MAAMuG,aAAaD,I,wEAnEtC,IAAD,OAEG/F,EAAYC,KAAKR,MAAjBO,QAER,OAAIC,KAAKR,MAAMwG,MAAMR,OAAS,EAEtB,yBAAKvF,UAAWF,EAAQ2E,MACpB,kBAACtD,EAAA,EAAD,CAAQd,QAAQ,YACZI,WAAS,EACTzC,MAAM,UACNgI,QAASjG,KAAK2F,QACd1F,UAAWF,EAAQmF,YAJvB,eAOA,kBAACgB,EAAA,EAAD,KAEQlG,KAAKR,MAAMwG,MAAM1B,IAAI,SAAC6B,EAAOC,GACzB,OACI,yBAAKC,IAAKD,GACN,kBAACE,EAAA,EAAD,CAAUL,QAAS,kBAAM,EAAKJ,WAAWO,IACrCnG,UAAWF,EAAQiF,SACnBuB,SAAU,EAAK/G,MAAMgH,oBAAsBJ,EAC3C1I,WAAW,cACX,kBAAC+I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,IAAI,cAAcR,EAAMS,MAAMC,OAAO,SAAAC,GAAK,OAAIA,IAAU,EAAKtH,MAAMkG,YAAW,GAAGqB,MAAM,IAAI,KAEvG,kBAACC,EAAA,EAAD,CACIC,QAASd,EAAMS,MAAMC,OAAO,SAAAC,GAAK,OAAIA,IAAU,EAAKtH,MAAMkG,YAAW,GACrEwB,UACI,kBAAC,IAAMC,SAAP,KACI,kBAAC/G,EAAA,EAAD,CAAYC,UAAU,OAClBpC,MAAM,eACLkI,EAAMjE,SAASiE,EAAMjE,SAASsD,OAAS,GAAGrC,QAAQiE,UAAU,EAAG,IAAM,YAKxD,IAA1BjB,EAAMkB,iBAA8B,EAAK9B,aAAaY,GAElD,KADA,kBAACmB,EAAA,EAAD,KAAc,kBAAC,IAAD,CAAuBrH,UAAWF,EAAQqF,kBAIpE,kBAACmC,EAAA,EAAD,WAUxB,yBAAKtH,UAAWF,EAAQ2E,MACpB,kBAACtD,EAAA,EAAD,CAAQd,QAAQ,YACZI,WAAS,EACTzC,MAAM,UACNgI,QAASjG,KAAK2F,QACd1F,UAAWF,EAAQmF,YAJvB,eAOA,kBAACgB,EAAA,EAAD,W,GA9DY5E,IAAMC,WAwEvBC,cAAW5E,EAAX4E,CAAmB8D,GC/BnB1I,EAvDA,SAAAC,GAAK,MAAK,CAErB2K,QAAS,CACL1C,OAAQ,sBACR2C,SAAU,OACV9J,QAAS,OACTV,WAAY,QACZyK,UAAW,aACXC,UAAW,SACX9E,IAAK,OACL9F,MAAO,qBACP6F,SAAU,YAGdgF,SAAU,CACNC,MAAO,OACPC,MAAO,OACPnK,QAAS,OACT+J,UAAW,aACXK,SAAU,aACVvK,UAAW,OACXmH,gBAAiB,UACjB1G,MAAO,QACPlB,MAAO,QACPoI,aAAc,QAGlB6C,WAAY,CACRH,MAAO,QACPC,MAAO,OACPnK,QAAS,OACT+J,UAAW,aACXK,SAAU,aACVvK,UAAW,OACXmH,gBAAiB,UACjB1G,MAAO,QACPlB,MAAO,QACPoI,aAAc,QAGlB8C,WAAY,CACRlL,MAAO,qBACP+H,OAAQ,OACRH,gBAAiB,UACjB/B,SAAU,QACV3F,WAAY,QACZiL,SAAU,OACV9J,UAAW,SACXH,MAAO,QACPkK,WAAY,OACZT,UAAW,gBC9CbU,E,2MAEFC,kBAAoB,WAChB,IAAMC,EAAYC,SAASC,eAAe,sBACtCF,GACAA,EAAUG,SAAS,EAAGH,EAAUI,e,EAExCC,mBAAqB,WACjB,IAAML,EAAYC,SAASC,eAAe,sBACtCF,GACAA,EAAUG,SAAS,EAAGH,EAAUI,e,wEAG9B,IAAD,OAEG3I,EAAYC,KAAKR,MAAjBO,QAER,YAAwB6I,IAApB5I,KAAKR,MAAM0E,KACH,0BAAMjE,UAAWF,EAAQyH,eACNoB,IAApB5I,KAAKR,MAAM0E,KAEd,6BACI,yBAAKjE,UAAWF,EAAQkI,YAAxB,0BAC4BjI,KAAKR,MAAM0E,KAAK0C,MAAMC,OAAO,SAAAgC,GAAI,OAAIA,IAAS,EAAKrJ,MAAMwC,OAAM,IAE3F,0BAAMd,GAAG,qBAAqBjB,UAAWF,EAAQyH,SAEzCxH,KAAKR,MAAM0E,KAAKhC,SAASoC,IAAI,SAACwE,EAAM1C,GAChC,OACI,yBAAKC,IAAKD,EAAQnG,UAAW6I,EAAKrD,SAAW,EAAKjG,MAAMwC,KAAOjC,EAAQ6H,SAAW7H,EAAQiI,YACrFc,EAAK3F,aAS1B,yBAAKlD,UAAU,sBAAf,kB,GAvCYqB,IAAMC,WA4CvBC,eAAW5E,EAAX4E,CAAmB4G,G,+BCtBnBxL,GAzBA,SAAAC,GAAK,MAAK,CAErBkM,QAAS,CACL9K,MAAO,OACPgH,OAAQ,UACR,UAAW,CACPhH,MAAO,SAIf+K,qBAAsB,CAClBpG,SAAU,WACVqG,OAAQ,OACRnG,KAAM,QACN4E,UAAW,aACXD,SAAU,OACV1K,MAAO,6BAGXmM,YAAa,CACTnM,MAAO,uBCfToM,G,YAEF,aAAe,IAAD,8BACV,+CAuBJ3K,WAAa,SAACS,GAAD,OAAqB,KAAdA,EAAEmK,QAAiB,EAAKC,gBAAkB,EAAK1K,SAAS,CAAE2K,SAAUrK,EAAEJ,OAAOC,SAxBnF,EAyBdyK,aAAe,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAAQ,MAAO,IAAIjE,QAzBxC,EA0BdkE,iBAAmB,kBAAM,EAAKlK,MAAMmK,sBA1BtB,EA2BdN,cAAgB,WACR,EAAKE,aAAa,EAAKjK,MAAMgK,YAC7B,EAAK9J,MAAMoK,gBAAgB,EAAKtK,MAAMgK,UACtCf,SAASC,eAAe,eAAe1J,MAAQ,KA5BnD,EAAKQ,MAAQ,CACTgK,SAAU,IAHJ,E,sEAOJ,IAAD,OAEGvJ,EAAYC,KAAKR,MAAjBO,QAER,OACI,yBAAKE,UAAWF,EAAQiJ,sBACpB,kBAACa,GAAA,EAAD,CACIC,YAAY,sBACZC,QAAS,SAAC9K,GAAD,OAAO,EAAKT,WAAWS,IAChCiC,GAAG,cACHjB,UAAWF,EAAQmJ,YACnBc,QAAShK,KAAK0J,mBAElB,kBAAC,KAAD,CAAMzD,QAASjG,KAAKqJ,cAAepJ,UAAWF,EAAQgJ,e,GAtBnCzH,IAAMC,WAqC1BC,eAAW5E,GAAX4E,CAAmB2H,IC7BnBvM,GAdA,SAAAC,GAAK,MAAK,CACrBoN,WAAY,CACRrH,SAAU,WACVqG,OAAQ,MACRnG,KAAM,MACN/F,MAAO,QACPoI,aAAc,MACdR,gBAAiB,UACjBG,OAAQ,OACRC,UAAW,oBACX9G,MAAO,WCHTI,GAAWC,EAAQ,IAUnB4L,G,YAEF,aAAe,IAAD,8BACV,+CA4CJC,QAAU,kBAAM9L,GAASe,OAAO+K,WA7ClB,EA+Cdd,cAAgB,SAACe,GACb,IAAMpG,EAAS,EAAKP,YAAY,EAAKnE,MAAM0G,MAAM,EAAK1G,MAAM+K,cACvDzD,MACAC,OAAO,SAAAgC,GAAI,OAAIA,IAAS,EAAKvJ,MAAMV,QAAO,IAC/CP,GACK8D,YACAC,WAAW,SACXC,IAAI2B,GACJsG,OAAO,CACJpI,SAAU7D,GAAS8D,UAAUoI,WAAWC,WAAW,CAC/C/E,OAAQ,EAAKnG,MAAMV,MACnBuE,QAASiH,EACTK,UAAWC,KAAKC,QAEpBtD,iBAAiB,KA7Df,EAmEd5D,YAAc,SAACmH,GAAD,MAAY,CAAC,EAAKtL,MAAMV,MAAOgM,GAAQjH,OAAOC,KAAK,MAnEnD,EAqEdiH,kBAAoB,kBAAM,EAAKlM,SAAS,CAAEmM,oBAAoB,EAAMT,aAAc,QArEpE,EAuEdU,cAvEc,sCAuEE,WAAOC,GAAP,eAAA9L,EAAA,4DACN8E,EAAS,EAAKP,YAAYuH,EAAQlH,QAD5B,SAGRzF,GACK8D,YACAC,WAAW,SACXC,IAAI2B,GACJ1B,IAAI,CACDJ,SAAU,CAAC,CACPiB,QAAS6H,EAAQ7H,QACjBsC,OAAQ,EAAKnG,MAAMV,QAEvBgI,MAAO,CAAC,EAAKtH,MAAMV,MAAOoM,EAAQlH,QAClCuD,iBAAiB,IAbjB,OAeZ,EAAK1I,SAAS,CAAEmM,oBAAoB,IACpC,EAAKjF,WAAW,EAAKvG,MAAM0G,MAAMR,OAAS,GAhB9B,yCAvEF,wDA0FdK,WA1Fc,sCA0FD,WAAOoF,GAAP,SAAA/L,EAAA,qEACH,EAAKP,SAAS,CAAE0L,aAAcY,EAAWH,oBAAoB,IAD1D,OAET,EAAKI,cAFI,yCA1FC,wDA+Fd3H,SA/Fc,sCA+FH,WAAOS,EAAQoG,GAAf,iBAAAlL,EAAA,4DACDiM,EAAcnH,EAAO+C,MAAM,KAC3B7C,EAAO,EAAK5E,MAAM0G,MAAMoF,KAAK,SAAAjF,GAAK,OAAIgF,EAAYE,MAAM,SAAAvE,GAAK,OAAIX,EAAMS,MAAMnC,SAASqC,OAC5F,EAAKnI,SAAS,CAAEmM,oBAAoB,IAH7B,SAID,EAAKjF,WAAW,EAAKvG,MAAM0G,MAAMsF,QAAQpH,IAJxC,OAKP,EAAKmF,cAAce,GALZ,yCA/FG,0DA0Gdc,YAAc,WACV,IAAMD,EAAY,EAAK3L,MAAM+K,aACvBrG,EAAS,EAAKP,YAAY,EAAKnE,MAAM0G,MAAMiF,GAAWrE,MAAMC,OAAO,SAAAgC,GAAI,OAAIA,IAAS,EAAKvJ,MAAMV,QAAO,IACxG,EAAK2M,6BAA6BN,GAClC5M,GACK8D,YACAC,WAAW,SACXC,IAAI2B,GACJsG,OAAO,CAAEjD,iBAAiB,IAE/BxH,QAAQC,IAAI,kDApHN,EAwHdyL,6BAA+B,SAACN,GAAD,OAAe,EAAK3L,MAAM0G,MAAMiF,GAAW/I,SAAS,EAAK5C,MAAM0G,MAAMiF,GAAW/I,SAASsD,OAAS,GAAGC,SAAW,EAAKnG,MAAMV,OAxH5I,EA0Hd4M,mBAAqB,WACjBnN,GAASe,OAAOqM,mBAAhB,sCAAmC,WAAM5C,GAAN,SAAA3J,EAAA,wDAC1B2J,EAD0B,gBAE3B,EAAKrJ,MAAMC,QAAQC,KAAK,UAFG,sCAIrBrB,GACD8D,YACAC,WAAW,SACXsJ,MAAM,QAAS,iBAAkB7C,EAAKjK,OACtC+M,WAJC,sCAIU,WAAMC,GAAN,eAAA1M,EAAA,4DACF8G,EAAQ4F,EAAIvH,KAAKC,IAAI,SAAAC,GAAI,OAAIA,EAAKC,SADhC,SAEF,EAAK7F,SAAS,CAChBC,MAAOiK,EAAKjK,MACZoH,MAAOA,EACP/D,QAAS,KALL,yCAJV,uDAJqB,yCAAnC,wDAzHA,EAAK3C,MAAQ,CACT+K,aAAc,KACdS,oBAAoB,EACpBlM,MAAO,KACPqD,QAAS,GACT+D,MAAO,IAPD,E,sEAWJ,IAEEjG,EAAYC,KAAKR,MAAjBO,QAER,OAAIC,KAAKV,MAAMV,MAEP,yBAAKqB,UAAU,sBAAsBiB,GAAG,uBACpC,kBAAC,EAAD,CAAmBzB,QAASO,KAAKR,MAAMC,QACnCiG,UAAW1F,KAAKV,MAAMV,MACtBmH,aAAc/F,KAAK6F,WACnBG,MAAOhG,KAAKV,MAAM0G,MAClBQ,kBAAmBxG,KAAKV,MAAM+K,aAC9BzE,aAAc5F,KAAK6K,oBAGnB7K,KAAKV,MAAMwL,mBAAqB,KAAO,kBAAC,GAAD,CACnC9I,KAAMhC,KAAKV,MAAMV,MACjBsF,KAAMlE,KAAKV,MAAM0G,MAAMhG,KAAKV,MAAM+K,gBAIV,OAA5BrK,KAAKV,MAAM+K,cAA0BrK,KAAKV,MAAMwL,mBAAgJ,KAA3H,kBAAC,GAAD,CAAsBnB,mBAAoB3J,KAAKkL,YAAatB,gBAAiB5J,KAAKqJ,gBAGvJrJ,KAAKV,MAAMwL,mBAAqB,kBAAC,EAAD,CAAkB/G,WAAY/D,KAAKuD,SAAUM,gBAAiB7D,KAAK+K,gBAAqC,KAE5I,kBAAC3J,EAAA,EAAD,CAAQ6E,QAASjG,KAAKmK,QAASlK,UAAWF,EAAQkK,YAAlD,aAIA,gD,GA3Ca3I,IAAMC,WAkJxBC,eAAW5E,GAAX4E,CAAmB0I,ICzJ5B7L,GAAWC,EAAQ,IACzBA,EAAQ,KACRD,GAASwN,cAAc,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,wCAGX,IAAMC,GACF,kBAAE,IAAF,KACI,yBAAKnL,GAAG,qBACJ,kBAAC,IAAD,CAAOoL,OAAK,EAACC,KAAK,SAASlM,UAAW9B,IACtC,kBAAC,IAAD,CAAO+N,OAAK,EAACC,KAAK,UAAUlM,UAAWoB,IACvC,kBAAC,IAAD,CAAO6K,OAAK,EAACC,KAAK,aAAalM,UAAW6J,OAMtDsC,IAASC,OAAOJ,GAAS9D,SAASC,eAAe,SfgG3C,kBAAmBkE,WACrBA,UAAUC,cAAcC,MAAMrN,KAAK,SAAAsN,GACjCA,EAAaC,iB","file":"static/js/main.3e88450a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    noAccountHeader: {\n        width: '100%'\n    },\n    signUpLink: {\n        width: '100%',\n        textDecoration: 'none',\n        color: '#303f9f',\n        fontWeight: 'bolder'\n    },\n    errorText: {\n        color: 'red',\n        textAlign: 'center'\n    }\n});\n\nexport default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: null,\n            password: null,\n            serverError: false\n        };\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <main className={classes.main}>\n                <CssBaseline />\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Log In!\n          </Typography>\n                    <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='login-email-input'>Enter Your Email</InputLabel>\n                            <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='login-email-input'></Input>\n                        </FormControl>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='login-password-input'>Enter Your Password</InputLabel>\n                            <Input autoComplete=\"current-password\" type=\"password\" onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\n                        </FormControl>\n                        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Log In</Button>\n                    </form>\n                    {this.state.serverError ?\n                        <Typography className={classes.errorText} component='h5' variant='h6'>\n                            Incorrect Login Information\n            </Typography> :\n                        null\n                    }\n                    <h5 className={classes.noAccountHeader}>Don't Have An Account?</h5>\n                    <Link className={classes.signUpLink} to='/signup'>Sign Up!</Link>\n                </Paper>\n            </main>\n        );\n    }\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'email':\n                this.setState({ email: event.target.value });\n                break;\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n            default:\n                break;\n        }\n    }\n    submitLogin = async (e) => {\n        e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n        await firebase\n            .auth()\n            .signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then(() => {\n                this.props.history.push('/dashboard');\n            }, err => {\n                this.setState({ serverError: true });\n                console.log('Error logging in: ', err);\n            });\n    };\n}\nexport default withStyles(styles)(LoginComponent);","const styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    noAccountHeader: {\n        width: '100%'\n    },\n    signUpLink: {\n        width: '100%',\n        textDecoration: 'none',\n        color: '#303f9f',\n        fontWeight: 'bolder'\n    },\n    errorText: {\n        color: 'red',\n        textAlign: 'center'\n    }\n});\n\nexport default styles;","\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nconst firebase = require(\"firebase\");\n\nclass SignupComponent extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: null,\n            password: null,\n            passwordConfirmation: null,\n            signupError: ''\n        };\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <main className={classes.main}>\n                <CssBaseline />\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign Up!\n          </Typography>\n                    <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='signup-email-input'>Enter Your Email</InputLabel>\n                            <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='signup-email-input'></Input>\n                        </FormControl>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='signup-password-input'>Create A Password</InputLabel>\n                            <Input type=\"password\" onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\n                        </FormControl>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Your Password</InputLabel>\n                            <Input type=\"password\" onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\n                        </FormControl>\n                        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n                    </form>\n                    {\n                        this.state.signupError ?\n                            <Typography className={classes.errorText} component='h5' variant='h6'>\n                                {this.state.signupError}\n                            </Typography> :\n                            null\n                    }\n                    <h5 className={classes.hasAccountHeader}>Already Have An Account?</h5>\n                    <Link className={classes.logInLink} to='/login'>Log In!</Link>\n                </Paper>\n            </main>\n        );\n    }\n\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'email':\n                this.setState({ email: event.target.value });\n                break;\n\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n\n            case 'passwordConfirmation':\n                this.setState({ passwordConfirmation: event.target.value });\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    submitSignup = (e) => {\n        e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n        if (!this.formIsValid()) {\n            this.setState({ signupError: 'Passwords do not match' });\n            return;\n        }\n\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(authRes => {\n                const userObj = {\n                    email: authRes.user.email,\n                    friends: [],\n                    messages: []\n                };\n                firebase\n                    .firestore()\n                    .collection('users')\n                    .doc(this.state.email)\n                    .set(userObj)\n                    .then(() => {\n                        this.props.history.push('/dashboard');\n                    }, dbErr => {\n                        console.log('Failed to add user to the database: ', dbErr);\n                        this.setState({ signupError: 'Failed to Sign Up' });\n                    });\n            }, authErr => {\n                console.log('Failed to create user: ', authErr);\n                this.setState({ signupError: 'Failed to add user' });\n            });\n    };\n}\n\nexport default withStyles(styles)(SignupComponent);","const styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n        position: 'absolute',\n        width: '350px',\n        top: '50px',\n        left: 'calc(50% + 150px - 175px)'\n    },\n    input: {\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3\n    },\n    errorText: {\n        color: 'red',\n        textAlign: 'center'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\nimport styles from './styles';\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: null,\n            message: null\n        };\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <main className={classes.main}>\n                <CssBaseline />\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">Send A Message!</Typography>\n                    <form className={classes.form} onSubmit={(e) => this.submitNewChat(e)}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor='new-chat-username'>\n                                Enter Your Friend's Email\n              </InputLabel>\n                            <Input required\n                                className={classes.input}\n                                autoFocus\n                                onChange={(e) => this.userTyping('username', e)}\n                                id='new-chat-username'>\n                            </Input>\n                        </FormControl>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor='new-chat-message'>\n                                Enter Your Message\n              </InputLabel>\n                            <Input required\n                                className={classes.input}\n                                onChange={(e) => this.userTyping('message', e)}\n                                id='new-chat-message'>\n                            </Input>\n                        </FormControl>\n                        <Button fullWidth variant='contained' color='primary' className={classes.submit} type='submit'>Send</Button>\n                    </form>\n                    {\n                        this.state.serverError ?\n                            <Typography component='h5' variant='h6' className={classes.errorText}>\n                                Unable to locate the user\n            </Typography> :\n                            null\n                    }\n                </Paper>\n            </main>\n        );\n    }\n    componentWillMount() {\n        if (!firebase.auth().currentUser)\n            this.props.history.push('/login');\n    }\n    userTyping = (inputType, e) => {\n        switch (inputType) {\n            case 'username':\n                this.setState({ username: e.target.value });\n                break;\n\n            case 'message':\n                this.setState({ message: e.target.value });\n                break;\n            default:\n                break;\n        }\n    }\n    submitNewChat = async (e) => {\n        e.preventDefault();\n        const userExists = await this.userExists();\n        if (userExists) {\n            const chatExists = await this.chatExists();\n            chatExists ? this.goToChat() : this.createChat();\n        }\n    }\n    buildDocKey = () => [firebase.auth().currentUser.email, this.state.username].sort().join(':');\n    createChat = () => {\n        this.props.newChatSubmitFn({\n            sendTo: this.state.username,\n            message: this.state.message\n        });\n    }\n    goToChat = () => this.props.goToChatFn(this.buildDocKey(), this.state.message);\n    chatExists = async () => {\n        const docKey = this.buildDocKey();\n        const chat = await\n            firebase\n                .firestore()\n                .collection('chats')\n                .doc(docKey)\n                .get();\n        console.log(chat.exists);\n        return chat.exists;\n    }\n    userExists = async () => {\n        const usersSnapshot = await\n            firebase\n                .firestore()\n                .collection('users')\n                .get();\n        const exists = usersSnapshot\n            .docs\n            .map(_doc => _doc.data().email)\n            .includes(this.state.username);\n        this.setState({ serverError: !exists });\n        return exists;\n    }\n}\nexport default withStyles(styles)(NewChatComponent);","const styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        height: 'calc(100% - 35px)',\n        position: 'absolute',\n        left: '0',\n        width: '300px',\n        boxShadow: '0px 0px 2px black'\n    },\n    listItem: {\n        cursor: 'pointer'\n    },\n    newChatBtn: {\n        borderRadius: '0px'\n    },\n    unreadMessage: {\n        color: 'red',\n        position: 'absolute',\n        top: '0',\n        right: '5px'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\n\nclass ChatListComponent extends React.Component {\n\n    render() {\n\n        const { classes } = this.props;\n\n        if (this.props.chats.length > 0) {\n            return (\n                <div className={classes.root}>\n                    <Button variant=\"contained\"\n                        fullWidth\n                        color='primary'\n                        onClick={this.newChat}\n                        className={classes.newChatBtn}>\n                        New Message\n            </Button>\n                    <List>\n                        {\n                            this.props.chats.map((_chat, _index) => {\n                                return (\n                                    <div key={_index}>\n                                        <ListItem onClick={() => this.selectChat(_index)}\n                                            className={classes.listItem}\n                                            selected={this.props.selectedChatIndex === _index}\n                                            alignItems=\"flex-start\">\n                                            <ListItemAvatar>\n                                                <Avatar alt=\"Remy Sharp\">{_chat.users.filter(_user => _user !== this.props.userEmail)[0].split('')[0]}</Avatar>\n                                            </ListItemAvatar>\n                                            <ListItemText\n                                                primary={_chat.users.filter(_user => _user !== this.props.userEmail)[0]}\n                                                secondary={\n                                                    <React.Fragment>\n                                                        <Typography component='span'\n                                                            color='textPrimary'>\n                                                            {_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}\n                                                        </Typography>\n                                                    </React.Fragment>\n                                                } />\n                                            {\n                                                _chat.receiverHasRead === false && !this.userIsSender(_chat) ?\n                                                    <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\n                                                    null\n                                            }\n                                        </ListItem>\n                                        <Divider />\n                                    </div>\n                                )\n                            })\n                        }\n                    </List>\n                </div>\n            );\n        } else {\n            return (\n                <div className={classes.root}>\n                    <Button variant=\"contained\"\n                        fullWidth\n                        color='primary'\n                        onClick={this.newChat}\n                        className={classes.newChatBtn}>\n                        New Message\n          </Button>\n                    <List></List>\n                </div>\n            );\n        }\n    }\n    userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n    newChat = () => this.props.newChatBtnFn();\n    selectChat = (index) => this.props.selectChatFn(index);\n}\n\nexport default withStyles(styles)(ChatListComponent);\n","const styles = theme => ({\n\n    content: {\n        height: 'calc(100vh - 100px)',\n        overflow: 'auto',\n        padding: '25px',\n        marginLeft: '300px',\n        boxSizing: 'border-box',\n        overflowY: 'scroll',\n        top: '50px',\n        width: 'calc(100% - 300px)',\n        position: 'absolute'\n    },\n\n    userSent: {\n        float: 'left',\n        clear: 'both',\n        padding: '20px',\n        boxSizing: 'border-box',\n        wordWrap: 'break-word',\n        marginTop: '10px',\n        backgroundColor: '#707BC4',\n        color: 'white',\n        width: '300px',\n        borderRadius: '10px'\n    },\n\n    friendSent: {\n        float: 'right',\n        clear: 'both',\n        padding: '20px',\n        boxSizing: 'border-box',\n        wordWrap: 'break-word',\n        marginTop: '10px',\n        backgroundColor: '#707BC4',\n        color: 'white',\n        width: '300px',\n        borderRadius: '10px'\n    },\n\n    chatHeader: {\n        width: 'calc(100% - 301px)',\n        height: '50px',\n        backgroundColor: '#344195',\n        position: 'fixed',\n        marginLeft: '301px',\n        fontSize: '18px',\n        textAlign: 'center',\n        color: 'white',\n        paddingTop: '10px',\n        boxSizing: 'border-box'\n    }\n\n});\n\nexport default styles;","import React from 'react';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass ChatViewComponent extends React.Component {\n\n    componentDidMount = () => {\n        const container = document.getElementById('chatview-container');\n        if (container)\n            container.scrollTo(0, container.scrollHeight);\n    }\n    componentDidUpdate = () => {\n        const container = document.getElementById('chatview-container');\n        if (container)\n            container.scrollTo(0, container.scrollHeight);\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        if (this.props.chat === undefined) {\n            return (<main className={classes.content}></main>);\n        } else if (this.props.chat !== undefined) {\n            return (\n                <div>\n                    <div className={classes.chatHeader}>\n                        Your conversation with {this.props.chat.users.filter(_usr => _usr !== this.props.user)[0]}\n                    </div>\n                    <main id='chatview-container' className={classes.content}>\n                        {\n                            this.props.chat.messages.map((_msg, _index) => {\n                                return (\n                                    <div key={_index} className={_msg.sender === this.props.user ? classes.userSent : classes.friendSent}>\n                                        {_msg.message}\n                                    </div>\n                                )\n                            })\n                        }\n                    </main>\n                </div>\n            );\n        } else {\n            return (<div className='chatview-container'>Loading...</div>);\n        }\n    }\n}\n\nexport default withStyles(styles)(ChatViewComponent);","\nconst styles = theme => ({\n\n    sendBtn: {\n        color: 'blue',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'gray'\n        }\n    },\n\n    chatTextBoxContainer: {\n        position: 'absolute',\n        bottom: '15px',\n        left: '315px',\n        boxSizing: 'border-box',\n        overflow: 'auto',\n        width: 'calc(100% - 300px - 50px)'\n    },\n\n    chatTextBox: {\n        width: 'calc(100% - 25px)'\n    }\n\n});\n\nexport default styles;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Send from '@material-ui/icons/Send';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass ChatTextBoxComponent extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            chatText: ''\n        };\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.chatTextBoxContainer}>\n                <TextField\n                    placeholder='Type your message..'\n                    onKeyUp={(e) => this.userTyping(e)}\n                    id='chattextbox'\n                    className={classes.chatTextBox}\n                    onFocus={this.userClickedInput}>\n                </TextField>\n                <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n            </div>\n        );\n    }\n    userTyping = (e) => e.keyCode === 13 ? this.submitMessage() : this.setState({ chatText: e.target.value });\n    messageValid = (txt) => txt && txt.replace(/\\s/g, '').length;\n    userClickedInput = () => this.props.userClickedInputFn();\n    submitMessage = () => {\n        if (this.messageValid(this.state.chatText)) {\n            this.props.submitMessageFn(this.state.chatText);\n            document.getElementById('chattextbox').value = '';\n        }\n    }\n}\n\nexport default withStyles(styles)(ChatTextBoxComponent);","const styles = theme => ({\n    signOutBtn: {\n        position: 'absolute',\n        bottom: '0px',\n        left: '0px',\n        width: '300px',\n        borderRadius: '0px',\n        backgroundColor: '#227092',\n        height: '35px',\n        boxShadow: '0px 0px 2px black',\n        color: 'white'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport NewChatComponent from '../NewChat/newChat';\nimport ChatListComponent from '../ChatList/chatList';\nimport ChatViewComponent from '../ChatView/chatView';\nimport ChatTextBoxComponent from '../ChatTextBox/chatTextBox';\nimport styles from './styles';\nimport { Button, withStyles } from '@material-ui/core';\nconst firebase = require(\"firebase\");\n\n// I need to investigate why sometimes\n// two messages will send instead of just\n// one. I dont know if there are two instances\n// of the chat box component or what...\n\n// I will be using both .then and async/await\n// in this tutorial to give a feel of both.\n\nclass DashboardComponent extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            selectedChat: null,\n            newChatFormVisible: false,\n            email: null,\n            friends: [],\n            chats: []\n        };\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        if (this.state.email) {\n            return (\n                <div className='dashboard-container' id='dashboard-container'>\n                    <ChatListComponent history={this.props.history}\n                        userEmail={this.state.email}\n                        selectChatFn={this.selectChat}\n                        chats={this.state.chats}\n                        selectedChatIndex={this.state.selectedChat}\n                        newChatBtnFn={this.newChatBtnClicked}>\n                    </ChatListComponent>\n                    {\n                        this.state.newChatFormVisible ? null : <ChatViewComponent\n                            user={this.state.email}\n                            chat={this.state.chats[this.state.selectedChat]}>\n                        </ChatViewComponent>\n                    }\n                    {\n                        this.state.selectedChat !== null && !this.state.newChatFormVisible ? <ChatTextBoxComponent userClickedInputFn={this.messageRead} submitMessageFn={this.submitMessage}></ChatTextBoxComponent> : null\n                    }\n                    {\n                        this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent> : null\n                    }\n                    <Button onClick={this.signOut} className={classes.signOutBtn}>Sign Out</Button>\n                </div>\n            );\n        } else {\n            return (<div>LOADING....</div>);\n        }\n    }\n\n    signOut = () => firebase.auth().signOut();\n\n    submitMessage = (msg) => {\n        const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat]\n            .users\n            .filter(_usr => _usr !== this.state.email)[0])\n        firebase\n            .firestore()\n            .collection('chats')\n            .doc(docKey)\n            .update({\n                messages: firebase.firestore.FieldValue.arrayUnion({\n                    sender: this.state.email,\n                    message: msg,\n                    timestamp: Date.now()\n                }),\n                receiverHasRead: false\n            });\n    }\n\n    // Always in alphabetical order:\n    // 'user1:user2'\n    buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\n\n    newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null });\n\n    newChatSubmit = async (chatObj) => {\n        const docKey = this.buildDocKey(chatObj.sendTo);\n        await\n            firebase\n                .firestore()\n                .collection('chats')\n                .doc(docKey)\n                .set({\n                    messages: [{\n                        message: chatObj.message,\n                        sender: this.state.email\n                    }],\n                    users: [this.state.email, chatObj.sendTo],\n                    receiverHasRead: false\n                })\n        this.setState({ newChatFormVisible: false });\n        this.selectChat(this.state.chats.length - 1);\n    }\n\n    selectChat = async (chatIndex) => {\n        await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\n        this.messageRead();\n    }\n\n    goToChat = async (docKey, msg) => {\n        const usersInChat = docKey.split(':');\n        const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\n        this.setState({ newChatFormVisible: false });\n        await this.selectChat(this.state.chats.indexOf(chat));\n        this.submitMessage(msg);\n    }\n\n    // Chat index could be different than the one we are currently on in the case\n    // that we are calling this function from within a loop such as the chatList.\n    // So we will set a default value and can overwrite it when necessary.\n    messageRead = () => {\n        const chatIndex = this.state.selectedChat;\n        const docKey = this.buildDocKey(this.state.chats[chatIndex].users.filter(_usr => _usr !== this.state.email)[0]);\n        if (this.clickedMessageWhereNotSender(chatIndex)) {\n            firebase\n                .firestore()\n                .collection('chats')\n                .doc(docKey)\n                .update({ receiverHasRead: true });\n        } else {\n            console.log('Clicked message where the user was the sender');\n        }\n    }\n\n    clickedMessageWhereNotSender = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1].sender !== this.state.email;\n\n    componentWillMount = () => {\n        firebase.auth().onAuthStateChanged(async _usr => {\n            if (!_usr)\n                this.props.history.push('/login');\n            else {\n                await firebase\n                    .firestore()\n                    .collection('chats')\n                    .where('users', 'array-contains', _usr.email)\n                    .onSnapshot(async res => {\n                        const chats = res.docs.map(_doc => _doc.data());\n                        await this.setState({\n                            email: _usr.email,\n                            chats: chats,\n                            friends: []\n                        });\n                    })\n            }\n        });\n    }\n}\n\nexport default withStyles(styles)(DashboardComponent);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport LoginComponent from './Login/login';\nimport SignupComponent from './Signup/signup';\nimport DashboardComponent from './Dashboard/dashboard';\n\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCABxA5SFHDQCy5PFGQPaL9N9KAq8mHrHo\",\n    authDomain: \"messenger-app-2ff31.firebaseapp.com\",\n    databaseURL: \"https://messenger-app-2ff31.firebaseio.com\",\n    projectId: \"messenger-app-2ff31\",\n    storageBucket: \"messenger-app-2ff31.appspot.com\",\n    messagingSenderId: \"590407448924\",\n    appId: \"1:590407448924:web:093117bf677c7a15\"\n});\n\nconst routing = (\n    < Router >\n        <div id='routing-container'>\n            <Route exact path=\"/login\" component={LoginComponent}></Route>\n            <Route exact path=\"/signup\" component={SignupComponent}></Route>\n            <Route exact path=\"/dashboard\" component={DashboardComponent}></Route>\n        </div>\n\n    </Router >\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}